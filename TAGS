
lamping.h,1201
#define LAMPING_LAMBDA_TYPE 8,365
#define LAMPING_APPLICATION_TYPE 10,443
#define LAMPING_FREE_TYPE 12,543
#define LAMPING_BRACKET_TYPE 15,601
#define LAMPING_CONDITIONAL_BRACKET_TYPE 16,632
#define LAMPING_RESTRICTED_BRACKET_TYPE 17,675
#define LAMPING_ROOT_TYPE 20,739
#define LAMPING_VOID_TYPE 21,767
#define LAMPING_FAN_START 24,879
  u32 type;28,928
    u32 level;30,949
    u32 arg;31,964
  } la;32,977
  u32 in;33,985
  u32 out;34,995
} LampingNode;35,1006
  LampingNode* heap;39,1039
  u32 heapsize;40,1060
  u32 frees;41,1076
  u32 root;42,1089
} LampingGraph;43,1101
LampingGraph* newLampingGraph(45,1118
void deleteLampingGraph(46,1157
u32 mallocLampingNode(47,1201
void freeLampingNode(48,1243
typedef struct pathContexti{pathContexti52,1297
  stack* dirs;53,1326
  struct pathContexti* next;54,1341
  struct pathContexti* closures;55,1370
} pathContext;56,1403
void traverseGraph(62,1668
LampingGraph* makeGraph(67,1872
LNZprogram* makeProgramFromGraph(70,2030
void printLampingGraph(72,2084
int ruleSweep(75,2218
void repoint(78,2365
int rulesSweep(80,2427
int rulesSweepNormalOrder(81,2483
int traceRulesSweep(82,2550
void validateGraph(86,2593

lnz.h,577
#define LNZ_H8,279
typedef unsigned char u8;18,421
typedef unsigned short int u16;19,447
typedef unsigned int u32;20,479
typedef unsigned long long int u64;21,505
typedef signed char s8;22,541
typedef signed short int s16;23,565
typedef signed int s32;24,595
typedef signed long long int s64;25,619
typedef float f32;26,653
typedef double f64;27,672
void addStringToString(63,1949
void LNZdie(65,2030
void* LNZmalloc(68,2079
void* LNZcalloc(69,2108
void LNZfree(70,2137
u8* LNZLoadResource(75,2385
u8* LNZLoadResourceOrDie(76,2437
u64 LNZmallocCount(81,2510

nameTable.h,637
#define LNZ_NAMETABLE_H6,268
typedef struct indexNode{indexNode11,570
  u64 index;12,596
  struct indexNode* next;13,609
} nameTableIndexNode;14,635
typedef struct node{node15,657
  struct node* continuations[continuations16,678
  nameTableIndexNode* indices;17,715
} nameTableNode;18,746
  u64 size;20,779
  u64 bufsize;21,791
  nameTableNode* dict;22,806
  u8** revdict;23,829
  u64* revdictSizes;24,845
} nameTable;25,866
nameTable* newNameTable(27,880
void deleteNameTable(28,913
void addNameToTable(30,954
u64 getIndex(32,1090
const u8* getName(34,1294
void popNameTable(36,1390
void printNameTable(39,1428

parser.h,251
#define LNZ_PARSER_H8,288
int isWhitespace(11,410
int isNumber(14,503
int isReserved(17,601
int isName(20,707
u32 parseExpression(24,876
u64 parseLine(27,1044
LNZprogram* parseProgram(30,1193
void printExpression(33,1324
void reduce(38,1502

pep.h,44
static const char* pepTalks[pepTalks8,284

program.h,1185
#define LNZ_PROGRAM_H8,302
#define LNZ_LAMBDA_TYPE 18,849
#define LNZ_APPLICATION_TYPE 19,875
#define LNZ_FREE_TYPE 20,906
#define LNZ_DATA_START 24,947
#define LNZ_STRING_TYPE 25,972
#define LNZ_INT_TYPE 26,998
#define LNZ_NEGATIVE_INT_TYPE 27,1021
#define LNZ_DATA_END 28,1053
#define LNZ_DATA_TYPE 29,1076
#define LNZ_BUILTIN_START 32,1102
  u32 type;35,1150
  u32 references;36,1162
  u64 data;37,1180
} LNZnode;38,1192
#define LNZ_INITIAL_HEAP_SIZE 43,1247
  LNZnode* heap;46,1297
  u32 heapsize;47,1314
  u32 frees;48,1330
  nameTable* names;49,1343
  nameTable* pointers;50,1363
  u64 global;51,1386
} LNZprogram;52,1400
LNZprogram* newProgram(55,1416
void deleteProgram(56,1448
u32 mallocNode(57,1485
void freeNode(58,1518
void addNamePointerPair(61,1613
void popNamePointerPair(62,1697
void multiplyNumberByInt(64,1740
void addIntToNumber(65,1799
u32 getPointerFromName(67,1854
const u8* getNameFromPointer(68,1930
void addStringChar(71,2076
char* numberToString(74,2184
LNZprogram* makeComputable(78,2439
void printProgram(81,2561
void printHeap(83,2627
int nodesEqual(86,2734
u64 betaReduce(91,2886
int betaReduceNormalOrder(93,2920

rules.h,858
int ruleOneA(8,327
int ruleOneB(9,369
int ruleTwoA(10,411
int ruleTwoB(11,453
int ruleTwoC(12,495
int ruleThreeA(13,537
int ruleThreeB(14,581
int ruleFourA(15,625
int ruleFourB(16,668
int ruleFourC(17,711
int ruleFourD(18,754
int ruleFourE(19,797
int ruleFiveAB(20,840
int ruleSixA(21,884
int ruleSixB(22,926
int ruleSixCD(23,968
int ruleSixEF(24,1011
int ruleSevenA(25,1054
int ruleSevenB(26,1098
int ruleSevenC(27,1142
int ruleSevenD(28,1186
int ruleSevenE(29,1230
int ruleSevenF(30,1274
int ruleSevenG(31,1318
int ruleSevenH(32,1362
int ruleSevenI(33,1406
int ruleSevenJ(34,1450
int ruleSevenKL(35,1494
int ruleSevenM(36,1539
int ruleSevenN(37,1583
int ruleEightA(40,1650
int ruleEightBCD(41,1694
int ruleEightE(42,1740
int ruleEightF(43,1784
int ruleEightGH(44,1828
int ruleEightIJKLMN(45,1873
int ruleEightO(46,1922

stack.h,252
#define LNZ_STACK_H6,264
  u64 size;10,321
  u64 bufsize;11,333
  u32* stack;12,348
} stack;13,362
stack* newStack(15,372
stack* copyStack(16,397
int equalsStack(17,433
void deleteStack(18,484
void push(19,515
u32 pop(20,548
u32 top(21,570

lamping.c,1624
u32 mallocLampingNode(9,344
void freeLampingNode(27,914
LampingGraph* newLampingGraph(33,1037
void deleteLampingGraph(47,1447
int equalsGraphTree(55,1677
u32 copyTreeToGraph(89,3018
void repoint(126,4494
void fanin(153,5218
int bracketFreeVars(211,6869
int betterBracketFreeVars(245,8409
void bracketFreeLambdas(302,10684
void bracketFanin(337,11615
void bracketFanins(365,12395
LampingGraph* makeGraph(373,12567
void printLampingGraph(399,13126
int ruleSweep(441,15039
const char* ruleNames[ruleNames493,15833
int applyRules(533,16272
int rulesSweep(542,16487
int traceRulesSweep(553,16706
pathContext* newPathContext(566,16947
pathContext* copyPathContext(571,17083
int equalsPathContext(584,17462
void deletePathContext(592,17740
void deletePathContextLevel(600,17950
  stack* froms;610,18106
  LNZprogram* p;611,18122
} building;612,18139
int buildProgram(614,18152
  nameTable* lambdas;701,20486
  pathContext *comp;comp702,20508
} ncheck;703,20529
int innerNestingCheck(704,20539
int nestingCheck(720,21115
  u32 lambda;738,21626
  pathContext *comp;comp739,21640
} tcheck;740,21661
int innerTransparencyCheck(741,21671
int transparencyCheck(756,22069
int compareContexts(771,22553
int innerIndependenceCheck(791,22902
int independenceCheck(803,23195
  u32 ind;816,23624
  u32 rule;817,23635
} rsno;818,23647
int rulesSweepNormalOrderFunc(820,23656
int rulesSweepNormalOrder(832,23911
void traverseGraph(846,24270
u32 copyGraphToTree(972,27889
LNZprogram* makeProgramFromGraph2(1118,32224
LNZprogram* makeProgramFromGraph(1126,32519
void validateGraph(1140,32965

lnz.c,189
static u64 lnzMallocCount 8,275
void* LNZmalloc(12,315
void* LNZcalloc(21,482
void LNZfree(31,653
u64 LNZmallocCount(39,751
void addIntToNumber(44,816
void addStringToString(72,1665

main.c,17
int main(11,270

nameTable.c,338
nameTable* newNameTable(8,263
void deleteIndexNodes(19,581
void deleteNodes(30,753
void deleteNameTable(39,975
void addNameToTable(51,1277
u64 getIndex(87,2531
const u8* getName(103,3001
u64 getNameLength(108,3163
void printNameTableRec(113,3260
void printNameTable(139,3881
int removeName(153,4349
void popNameTable(174,4860

os.c,115
#define WIN32_LEAN_AND_MEAN6,284
void LNZdie(13,354
u8* LNZLoadResource(19,459
u8* LNZLoadResourceOrDie(36,906

parser.c,232
int isWhitespace(8,279
int isReserved(14,361
int isName(20,451
int isNumber(26,547
u32 parseExpression(35,876
u64 parseLine(306,7210
LNZprogram* parseProgram(387,8883
u32 indexHelper(424,9796
void printExpression(438,10192

program.c,690
u32 mallocNode(8,263
void freeNode(26,817
LNZprogram* newProgram(32,932
void deleteProgram(50,1422
void addNamePointerPair(56,1564
void popNamePointerPair(60,1768
u32 getPointerFromName(64,1871
const u8* getNameFromPointer(70,2080
char* numberToString(77,2297
void multiplyNumberByInt(107,2982
void addStringChar(136,3899
void printProgram(154,4458
void printHeap(168,4864
u32 copyData(176,5191
u32 copyExpression(212,6246
void reLambda(310,9912
void downLambda(327,10609
void countRefs(351,11490
LNZprogram* makeComputable(367,11922
void decref(381,12418
int dataEqual(418,13464
int nodesEqual(457,14452
u64 betaReduce(486,15531
int betaReduceNormalOrder(508,16033

rules.c,933
int ruleOneA(10,389
int ruleOneB(32,1067
int ruleTwoA(60,1907
int ruleTwoB(91,2819
int ruleTwoC(120,3756
int ruleThreeA(167,5035
int ruleThreeB(178,5343
int ruleFourA(198,5888
int ruleFourB(224,6741
int ruleFourC(250,7596
int ruleFourD(276,8449
int ruleFourE(302,9304
int ruleFiveAB(341,10448
int ruleSixA(389,11678
int ruleSixB(419,12500
int ruleSixCD(450,13392
int ruleSixEF(483,14399
int ruleSevenA(516,15419
int ruleSevenB(533,15949
int ruleSevenC(550,16461
int ruleSevenD(567,16993
int ruleSevenE(579,17361
int ruleSevenF(593,17832
int ruleSevenG(613,18516
int ruleSevenH(626,18921
int ruleSevenI(647,19660
int ruleSevenJ(669,20365
int ruleSevenKL(683,20850
int ruleSevenM(704,21558
int ruleSevenN(725,22228
int ruleEightA(746,22902
int ruleEightBCD(763,23408
int ruleEightE(794,24324
int ruleEightF(810,24777
int ruleEightGH(826,25261
int ruleEightIJKLMN(849,25839
int ruleEightO(868,26383

stack.c,149
stack* newStack(7,262
stack* copyStack(14,412
int equalsStack(24,694
void deleteStack(32,894
void push(37,969
u32 pop(47,1256
u32 top(54,1399
